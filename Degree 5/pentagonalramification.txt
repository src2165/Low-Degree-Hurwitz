truncateOutput 50
loadPackage "Schubert2"
B1=base(14, Bundle=>(Q, 6, "q"), Bundle=>(HypPT,1,"psi"), Bundle=>(M,5,"m"), Bundle=>(Gpluck,1,"s"))
B1R=intersectionRing(B1)
PQvee=flagBundle({5,1},Q)
PQveeR=intersectionRing(PQvee)
beta=PQvee.StructureMap
Ndual=abstractSheaf(PQvee,ChernClass=>1+chern_1(dual(M)+(HypPT**HypPT))-chern_1(dual(Q)**dual(Gpluck))+chern_1(OO_PQvee(-1)**dual(Gpluck)), Rank=>1)
Trip=(Q**Gpluck)+(Q**HypPT**Gpluck)+(dual(M)**OO_PQvee(1)**Gpluck)+(HypPT**HypPT**OO_PQvee(1)**Gpluck)
extra=chern_1(HypPT)+chern_1(OO_PQvee(1))+chern_1(Gpluck)+chern_1(Ndual)
newextra=toString(extra)
trip1=beta_*(ctop(Trip))
newtrip1=toString(trip1)


B2=base(8, Bundle=>(Tan, 6, "t"), Bundle=>(Q, 6, "q"), Bundle=>(Gpluck,1,"s"))
B2R=intersectionRing(B2)
PT=flagBundle({1,5},Tan)
PTR=intersectionRing(PT)
BunPT=bundles(PT)
eta=PT.StructureMap
psi1=chern_1(dual(BunPT#0))
M=BunPT#1
m1=chern_1(M)
m2=chern_2(M)
m3=chern_3(M)
m4=chern_4(M)
m5=chern_5(M)
trip2=eta_*(value(newtrip1))
newtrip2=toString(trip2)
quad1=eta_*(value(newtrip1)*value(newextra))
newquad1=toString(quad1)
Ram=(Q**Gpluck)+(Q**Gpluck**dual(BunPT#0))
ram1=eta_*(ctop(Ram))
newram1=toString(ram1)

B3=base(11,Bundle=>(F,5,"f"),Bundle=>(E,4,"e"))
B3R=intersectionRing(B3)
Ep=dual(E)**determinant(E)
Q=abstractSheaf(B3,ChernCharacter=>ch(exteriorPower_2(F))-ch(Ep))
q1=chern_1(Q)
q2=chern_2(Q)
q3=chern_3(Q)
q4=chern_4(Q)
q5=chern_5(Q)
q6=chern_6(Q)
G2F=flagBundle({2,3},F)
G2FR=intersectionRing(G2F)
BunG2F=bundles(G2F)
alpha=G2F.StructureMap
Gpluck=dual(determinant(BunG2F#0))
Tan=tangentBundle(alpha)
t1=chern_1(Tan)
t2=chern_2(Tan)
t3=chern_3(Tan)
t4=chern_4(Tan)
t5=chern_5(Tan)
t6=chern_6(Tan)
s1=chern_1(Gpluck)
trip3=alpha_*(value(newtrip2))
extratrip3=alpha_*(value(newextratrip2))
othertrip3=alpha_*(value(newothertrip2))
differenttrip3=alpha_*(value(newtrip2)*s1)
newtrip3=toString(trip3)
newextratrip3=toString(extratrip3)
newothertrip3=toString(othertrip3)
newdifferenttrip3=toString(differenttrip3)
quad2=alpha_*(value(newquad1))
newquad2=toString(quad2)
ram2=alpha_*(value(newram1))
newram2=toString(ram2)


B4=base(12,g,Bundle=>(A,4,"a"),Bundle=>(D,3,"d"), Bundle=>(B,5,"b"), Bundle=>(M1,4,"m"), Bundle=>(C,2,"c"))
B4R=intersectionRing(B4)
V=abstractSheaf(B4, ChernClass=>1+c2, Rank=>2)
P=flagBundle({1,1},V)
PR=intersectionRing(P)
p=P.StructureMap
z1=chern_1(OO_P(1))
E=abstractSheaf(P, ChernClass=>1+a1+(g+4)*z1+a2+d1*z1+a3+d2*z1+a4+d3*z1, Rank=>4)
F=abstractSheaf(P, ChernClass=>1+2*a1+(2*g+8)*z1+b2+m1*z1+b3+m2*z1+b4+m3*z1+b5+m4*z1, Rank=>5)
e1=chern_1(E)
e2=chern_2(E)
e3=chern_3(E)
e4=chern_4(E)
f1=chern_1(F)
f2=chern_2(F)
f3=chern_3(F)
f4=chern_4(F)
f5=chern_5(F)

ram3=p_*(value(newram2))
trip4=p_*(value(newtrip3))
extratrip4=p_*(value(newextratrip3))
othertrip4=p_*(value(newothertrip3))
differenttrip4=p_*(value(newdifferenttrip3))
lasttrip4=p_*(value(newtrip3)*z1)
quad3=p_*(value(newquad2))