A=QQ[g]
R=frac(A)
S=R[a1,a2,a3,a4,b2,b3,b4,b5,d1,d2,d3,m1,m2,m3,m4,c2, Degrees=>{{1},{2},{3},{4},{2},{3},{4},{5},{1},{2},{3},{1},{2},{3},{4},{2}}]
I2=ideal(-m1 + (-7)*d1 + (10*g + 36)*a1, 
-b2 + 5*a1^2 + (-7)*a2 + (-5*g^2 - 36*g - 64)*c2,
-d2 + (-g - 3)*a1^2 + a1*d1 + (g + 2)*a2 + (1/3*g^3 + 3*g^2 + 26/3*g + 8)*c2,
-m2 + (99/5*g + 337/5)*a1^2 + (-62/5)*a1*d1 + (-62/5*g - 194/5)*a2 + (-33/5*g^3 - 337/5*g^2 - 1138/5*g - 1272/5)*c2,
-a3 + (-1/3)*a1^3 + a1*a2 + (g^2 + 6*g + 26/3)*a1*c2 + (-g - 2)*d1*c2,
-m3 + (4232/375*g + 3146/75)*a1^3 + (-824/125)*a1^2*d1 + (-1648/125*g - 6422/125)*a1*a2 + 104/25*a2*d1 + (-4232/375*g^3 - 3146/25*g^2 - 34024/75*g - 39712/75)*a1*c2 + (824/125*g^2 + 6422/125*g + 10928/125)*d1*c2,
-d3 + (-676/125*g - 433/25)*a1^3 + 621/125*a1^2*d1 + (1242/125*g + 3888/125)*a1*a2 + (-216/25)*a2*d1 + (676/125*g^3 + 1299/25*g^2 + 4172/25*g + 4496/25)*a1*c2 + (-621/125*g^2 - 3888/125*g - 6312/125)*d1*c2,
-b3 + 33/5*a1^3 + (-62/5)*a1*a2 + (-99/5*g^2 - 674/5*g - 1138/5)*a1*c2 + (62/5*g + 194/5)*d1*c2,
-b4 + 1058/375*a1^4 + (-824/125)*a1^2*a2 + (-2116/125*g^2 - 3146/25*g - 17012/75)*a1^2*c2 + (1648/125*g + 6422/125)*a1*d1*c2 + (-52/25)*d1^2*c2 + 52/25*a2^2 + (824/125*g^2 + 6422/125*g + 10928/125)*a2*c2 + (1058/375*g^4 + 3146/75*g^3 + 17012/75*g^2 + 39712/75*g + 56384/125)*c2^2,
-m4 + (1638/25*g + 24792/125)*a1^4 + (-6542/125)*a1^3*d1 + (-19626/125*g - 54234/125)*a1^2*a2 + 2592/25*a1*a2*d1 + (-3276/25*g^3 - 148752/125*g^2 - 88698/25*g - 17292/5)*a1^2*c2 + (19626/125*g^2 + 108468/125*g + 142648/125)*a1*d1*c2 + (-1296/25*g - 1944/25)*d1^2*c2 + (1296/25*g + 1944/25)*a2^2 + (6542/125*g^3 + 54234/125*g^2 + 142648/125*g + 114576/125)*a2*c2 + (1638/125*g^5 + 24792/125*g^4 + 29566/25*g^3 + 17292/5*g^2 + 615712/125*g + 337728/125)*c2^2,
-a4 + (-169/125)*a1^4 + 621/125*a1^2*a2 + (1014/125*g^2 + 1299/25*g + 2086/25)*a1^2*c2 + (-1242/125*g - 3888/125)*a1*d1*c2 + 108/25*d1^2*c2 + (-108/25)*a2^2 + (-621/125*g^2 - 3888/125*g - 6312/125)*a2*c2 + (-169/125*g^4 - 433/25*g^3 - 2086/25*g^2 - 4496/25*g - 18336/125)*c2^2,
-b5 + 1638/125*a1^5 + (-6542/125)*a1^3*a2 + (-3276/25*g^2 - 99168/125*g - 29566/25)*a1^3*c2 + (19626/125*g + 54234/125)*a1^2*d1*c2 + (-1296/25)*a1*d1^2*c2 + 1296/25*a1*a2^2 + (19626/125*g^2 + 108468/125*g + 142648/125)*a1*a2*c2 + (-2592/25*g - 3888/25)*a2*d1*c2 + (1638/25*g^4 + 99168/125*g^3 + 88698/25*g^2 + 34584/5*g + 615712/125)*a1*c2^2 + (-6542/125*g^3 - 54234/125*g^2 - 142648/125*g - 114576/125)*d1*c2^2,
(1064/5*g + 722)*a1^3 + (-1074/5)*a1^2*d1 + (-2148/5*g - 7272/5)*a1*a2 + 432*a2*d1 + (-1064/5*g^3 - 2166*g^2 - 7336*g - 8272)*a1*c2 + (1074/5*g^2 + 7272/5*g + 12288/5)*d1*c2,
(-6412/15*g - 1417)*a1^3 + 2069/5*a1^2*d1 + (4138/5*g + 13632/5)*a1*a2 + (-792)*a2*d1 + (6412/15*g^3 + 4251*g^2 + 42308/3*g + 15632)*a1*c2 + (-2069/5*g^2 - 13632/5*g - 22728/5)*d1*c2,
(-1523/5*g - 67763/75)*a1^4 + 6047/25*a1^3*d1 + (18141/25*g + 1954)*a1^2*a2 + (-2376/5)*a1*a2*d1 + (3046/5*g^3 + 135526/25*g^2 + 78948/5*g + 224612/15)*a1^2*c2 + (-18141/25*g^2 - 3908*g - 124216/25)*a1*d1*c2 + (1188/5*g + 1656/5)*d1^2*c2 + (-1188/5*g - 1656/5)*a2^2 + (-6047/25*g^3 - 1954*g^2 - 124216/25*g - 94608/25)*a2*c2 + (-1523/25*g^5 - 67763/75*g^4 - 26316/5*g^3 - 224612/15*g^2 - 515392/25*g - 270144/25)*c2^2,
266/5*a1^4 + (-1074/5)*a1^2*a2 + (-1596/5*g^2 - 2166*g - 3668)*a1^2*c2 + (2148/5*g + 7272/5)*a1*d1*c2 + (-216)*d1^2*c2 + 216*a2^2 + (1074/5*g^2 + 7272/5*g + 12288/5)*a2*c2 + (266/5*g^4 + 722*g^3 + 3668*g^2 + 8272*g + 34944/5)*c2^2,
(-3709/15*g - 68407/75)*a1^4 + 5087/25*a1^3*d1 + (15261/25*g + 58622/25)*a1^2*a2 + (-2088/5)*a1*a2*d1 + (7418/15*g^3 + 136814/25*g^2 + 99964/5*g + 72452/3)*a1^2*c2 + (-15261/25*g^2 - 117244/25*g - 220992/25)*a1*d1*c2 + (1044/5*g + 4824/5)*d1^2*c2 + (-1044/5*g - 4824/5)*a2^2 + (-5087/25*g^3 - 58622/25*g^2 - 220992/25*g - 274032/25)*a2*c2 + (-3709/75*g^5 - 68407/75*g^4 - 99964/15*g^3 - 72452/3*g^2 - 1086752/25*g - 778176/25)*c2^2)

kappa1old=(12*g+36)*a1-12*d1
trold=(24*g+84)*a1-24*d1
Dold=-(32*g+112)*a1+36*d1
kappa2old=6*g^2*c2-6*a1^2-7*g*a2-7*a1*d1+2*g*b2+2*a1*m1+24*g*c2+2*a2+5*d2+2*b2-m2+40*c2
Uold=-4*g^3*c2+12*g*a1^2-48*g^2*c2+48*a1^2-4*g*b2-4*a1*m1-192*g*c2-16*b2+4*m2-256*c2
extraold=(3*g^2+24*g+48)*c2-3*a1^2-3*a2+3*b2
J=minimalPresentation(I2)
f=I2.cache.minimalPresentationMap
apply(14, i->hilbertFunction(i,J))

textJ=toString(J)
G=R[a1,a2,d1,c2, Degrees=>{{1},{2},{1},{2}}]
newJ=value(textJ)
Chow=G/newJ
basis(1,Chow)
basis(2,Chow)
basis(3,Chow)
basis(4,Chow)
basis(5,Chow)
basis(6,Chow)
basis(7,Chow)
kappa1=f(kappa1old)
tr=f(trold)
D=f(Dold)
kappa2=f(kappa2old)
U=f(Uold)
extra=f(extraold)


M1=matrix{{coefficient(a1,D),coefficient(d1,D)},{coefficient(a1,tr),coefficient(d1,tr)}}
M1p=matrix{{coefficient(a1,kappa1),coefficient(d1,kappa1)},{coefficient(a1,tr),coefficient(d1,tr)}}
M2=matrix{{coefficient(a1^2,tr*kappa1),coefficient(a1*d1,tr*kappa1),coefficient(a2,tr*kappa1),coefficient(c2,tr*kappa1), coefficient(d1^2,tr*kappa1)},{coefficient(a1^2,kappa2),coefficient(a1*d1,kappa2),coefficient(a2,kappa2),coefficient(c2,kappa2), coefficient(d1^2,kappa2)},{coefficient(a1^2,U),coefficient(a1*d1,U),coefficient(a2,U),coefficient(c2,U), coefficient(d1^2,U)},{coefficient(a1^2,kappa1*D),coefficient(a1*d1,kappa1*D),coefficient(a2,kappa1*D),coefficient(c2,kappa1*D), coefficient(d1^2,kappa1*D)}, {coefficient(a1^2,tr*D),coefficient(a1*d1,tr*D),coefficient(a2,tr*D),coefficient(c2,tr*D), coefficient(d1^2,tr*D)}}
M3=matrix{{coefficient(a1^2*d1,kappa1^2*tr),coefficient(a1*d1^2,kappa1^2*tr),coefficient(a1*c2,kappa1^2*tr),coefficient(a2*d1,kappa1^2*tr),coefficient(d1^3,kappa1^2*tr),coefficient(d1*c2,kappa1^2*tr)},{coefficient(a1^2*d1,kappa1^2*D),coefficient(a1*d1^2,kappa1^2*D),coefficient(a1*c2,kappa1^2*D),coefficient(a2*d1,kappa1^2*D),coefficient(d1^3,kappa1^2*D),coefficient(d1*c2,kappa1^2*D)},{coefficient(a1^2*d1,tr*D*kappa1),coefficient(a1*d1^2,tr*D*kappa1),coefficient(a1*c2,tr*D*kappa1),coefficient(a2*d1,tr*D*kappa1),coefficient(d1^3,tr*D*kappa1),coefficient(d1*c2,tr*D*kappa1)},{coefficient(a1^2*d1,U*kappa1),coefficient(a1*d1^2,U*kappa1),coefficient(a1*c2,U*kappa1),coefficient(a2*d1,U*kappa1),coefficient(d1^3,U*kappa1),coefficient(d1*c2,U*kappa1)},{coefficient(a1^2*d1,tr*kappa2),coefficient(a1*d1^2,tr*kappa2),coefficient(a1*c2,tr*kappa2),coefficient(a2*d1,tr*kappa2),coefficient(d1^3,tr*kappa2),coefficient(d1*c2,tr*kappa2)},{coefficient(a1^2*d1,D*kappa2),coefficient(a1*d1^2,D*kappa2),coefficient(a1*c2,D*kappa2),coefficient(a2*d1,D*kappa2),coefficient(d1^3,D*kappa2),coefficient(d1*c2,D*kappa2)}}
M4=matrix{{coefficient(a1^2*c2,tr*kappa1^3),coefficient(a1*d1^3,tr*kappa1^3),coefficient(a1*d1*c2,tr*kappa1^3),coefficient(a2*c2,tr*kappa1^3), coefficient(d1^4,tr*kappa1^3),coefficient(d1^2*c2,tr*kappa1^3),coefficient(c2^2,tr*kappa1^3)},{coefficient(a1^2*c2,kappa1^4),coefficient(a1*d1^3,kappa1^4),coefficient(a1*d1*c2,kappa1^4),coefficient(a2*c2,kappa1^4), coefficient(d1^4,kappa1^4),coefficient(d1^2*c2,kappa1^4),coefficient(c2^2,kappa1^4)},{coefficient(a1^2*c2,tr*kappa1*kappa2),coefficient(a1*d1^3,tr*kappa1*kappa2),coefficient(a1*d1*c2,tr*kappa1*kappa2),coefficient(a2*c2,tr*kappa1*kappa2), coefficient(d1^4,tr*kappa1*kappa2),coefficient(d1^2*c2,tr*kappa1*kappa2),coefficient(c2^2,tr*kappa1*kappa2)},{coefficient(a1^2*c2,tr*D*kappa2),coefficient(a1*d1^3,tr*D*kappa2),coefficient(a1*d1*c2,tr*D*kappa2),coefficient(a2*c2,tr*D*kappa2), coefficient(d1^4,tr*D*kappa2),coefficient(d1^2*c2,tr*D*kappa2),coefficient(c2^2,tr*D*kappa2)},{coefficient(a1^2*c2,kappa2^2),coefficient(a1*d1^3,kappa2^2),coefficient(a1*d1*c2,kappa2^2),coefficient(a2*c2,kappa2^2), coefficient(d1^4,kappa2^2),coefficient(d1^2*c2,kappa2^2),coefficient(c2^2,kappa2^2)},{coefficient(a1^2*c2,kappa1^2*kappa2),coefficient(a1*d1^3,kappa1^2*kappa2),coefficient(a1*d1*c2,kappa1^2*kappa2),coefficient(a2*c2,kappa1^2*kappa2), coefficient(d1^4,kappa1^2*kappa2),coefficient(d1^2*c2,kappa1^2*kappa2),coefficient(c2^2,kappa1^2*kappa2)},{coefficient(a1^2*c2,U*kappa2),coefficient(a1*d1^3,U*kappa2),coefficient(a1*d1*c2,U*kappa2),coefficient(a2*c2,U*kappa2), coefficient(d1^4,U*kappa2),coefficient(d1^2*c2,U*kappa2),coefficient(c2^2,U*kappa2)}}
M5=matrix{{coefficient(a1*d1^4,kappa1^5),coefficient(a1*c2^2,kappa1^5),coefficient(d1^5,kappa1^5),coefficient(d1*c2^2,kappa1^5)},{coefficient(a1*d1^4,kappa1*kappa2^2),coefficient(a1*c2^2,kappa1*kappa2^2),coefficient(d1^5,kappa1*kappa2^2),coefficient(d1*c2^2,kappa1*kappa2^2)},{coefficient(a1*d1^4,tr*kappa2^2),coefficient(a1*c2^2,tr*kappa2^2),coefficient(d1^5,tr*kappa2^2),coefficient(d1*c2^2,tr*kappa2^2)},{coefficient(a1*d1^4,tr*kappa1^4),coefficient(a1*c2^2,tr*kappa1^4),coefficient(d1^5,tr*kappa1^4),coefficient(d1*c2^2,tr*kappa1^4)}}
M6=matrix{{coefficient(d1^6,kappa1^6),coefficient(d1^5*a1,kappa1^6),coefficient(c2^3,kappa1^6)},{coefficient(d1^6,kappa1^4*kappa2),coefficient(d1^5*a1,kappa1^4*kappa2),coefficient(c2^3,kappa1^4*kappa2)},{coefficient(d1^6,kappa2^3),coefficient(d1^5*a1,kappa2^3),coefficient(c2^3,kappa2^3)}}
M7=matrix{{coefficient(d1^7,kappa1^7),coefficient(d1^6*a1,kappa1^7)},{coefficient(d1^7,kappa1^6*tr),coefficient(d1^6*a1,kappa1^6*tr)}}
M8=matrix{{coefficient(d1^8,kappa1^8),coefficient(d1^7*a1,kappa1^8)},{coefficient(d1^8,kappa1^7*tr),coefficient(d1^7*a1,kappa1^7*tr)}}
M9=matrix{{coefficient(d1^9,kappa1^9),coefficient(d1^8*a1,kappa1^9)},{coefficient(d1^9,kappa1^8*tr),coefficient(d1^8*a1,kappa1^8*tr)}}
M10=matrix{{coefficient(d1^10,kappa1^10),coefficient(d1^9*a1,kappa1^10)},{coefficient(d1^10,kappa1^9*tr),coefficient(d1^9*a1,kappa1^9*tr)}}
M11=matrix{{coefficient(d1^11,kappa1^11),coefficient(d1^10*a1,kappa1^11)},{coefficient(d1^11,kappa1^10*tr),coefficient(d1^10*a1,kappa1^10*tr)}}
M12=matrix{{coefficient(d1^12,kappa1^12),coefficient(d1^11*a1,kappa1^12)},{coefficient(d1^12,kappa1^11*tr),coefficient(d1^11*a1,kappa1^11*tr)}}
M13=matrix{{coefficient(d1^13,kappa1^13),coefficient(d1^12*a1,kappa1^13)},{coefficient(d1^13,kappa1^12*tr),coefficient(d1^12*a1,kappa1^12*tr)}}
M14=matrix{{coefficient(d1^14,kappa1^14),coefficient(d1^13*a1,kappa1^14)},{coefficient(d1^14,kappa1^13*tr),coefficient(d1^13*a1,kappa1^13*tr)}}

det1=det(M1)
det1p=det(M1p)
det2=det(M2)
det3=det(M3)
det4=det(M4)
det5=det(M5)
det6=det(M6)
det7=det(M7)
det8=det(M8)
det9=det(M9)
det10=det(M10)
det11=det(M11)
det12=det(M12)
det13=det(M13)
det14=det(M14)


num1=numerator(det1)
num1p=numerator(det1p)
num2=numerator(det2)
num3=numerator(det3)
num4=numerator(det4)
num5=numerator(det5)
num6=numerator(det6)
num7=numerator(det7)
num8=numerator(det8)
num9=numerator(det9)
num10=numerator(det10)
num11=numerator(det11)
num12=numerator(det12)
num13=numerator(det13)
num14=numerator(det14)
roots(num1)
roots(num1p)
roots(num2)
roots(num3)
roots(num4)
roots(num5)
roots(num6)
roots(num7)
roots(num8)
roots(num9)
roots(num10)
roots(num11)
roots(num12)
roots(num13)
roots(num14)
